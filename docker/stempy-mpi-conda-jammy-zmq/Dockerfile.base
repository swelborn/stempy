FROM ubuntu:jammy as base

ENV DEBIAN_FRONTEND noninteractive

WORKDIR /source

RUN apt-get update                                      && \
    apt-get upgrade --yes                               && \
    apt-get install --yes    \
    wget \          
    libeigen3-dev \
    git \
    autoconf \
    automake \
    gcc \
    g++ \
    make \
    gfortran \
    zlib1g-dev \
    libffi-dev \
    apt-transport-https \
    ca-certificates \
    gnupg \
    software-properties-common \
    libhdf5-dev \
    build-essential \
    ninja-build \
    libsqlite3-dev \
    mpich \
    libmpich-dev \
    clang \
    cmake \
    gdb \
    libtool \
    zip \
    curl \
    libboost-all-dev \
    pkg-config                                          && \
    apt-get clean all                                   && \
    rm -rf /var/lib/apt/lists/*                         && \
    mkdir /build/   

ENV PATH /opt/conda/bin:$PATH

CMD [ "/bin/bash" ]

# Leave these args here to better use the Docker build cache
ARG CONDA_VERSION=py37_23.1.0-1

RUN set -x && \
    UNAME_M="$(uname -m)" && \
    if [ "${UNAME_M}" = "x86_64" ]; then \
    MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh"; \
    SHA256SUM="fc96109ea96493e31f70abbc5cae58e80634480c0686ab46924549ac41176812"; \
    elif [ "${UNAME_M}" = "s390x" ]; then \
    MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-s390x.sh"; \
    SHA256SUM="72a8fa9aca5abaf99771110746b1345a33d390c9b29a7b4daffe6a2ff00f2366"; \
    elif [ "${UNAME_M}" = "aarch64" ]; then \
    MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-aarch64.sh"; \
    SHA256SUM="31c1d635fae931b7c0687018cc87e918e8098ed5dd5e76a658e10c57e00ef864"; \
    elif [ "${UNAME_M}" = "ppc64le" ]; then \
    MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-ppc64le.sh"; \
    SHA256SUM="d2de534bfa46aa34ef0b115a309de7e8a681683af65faf86bcee6a00460f07be"; \
    fi && \
    wget "${MINICONDA_URL}" -O miniconda.sh -q && \
    echo "${SHA256SUM} miniconda.sh" > shasum && \
    if [ "${CONDA_VERSION}" != "latest" ]; then sha256sum --check --status shasum; fi && \
    mkdir -p /opt && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh shasum && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy && \
    /opt/conda/bin/conda install -c conda-forge mamba -y && \
    mkdir /condaenv

RUN /sbin/ldconfig

RUN git clone https://github.com/zeromq/libzmq.git && \
    cd libzmq && mkdir build && cd build && \
    cmake .. -DBUILD_SHARED=ON -DBUILD_STATIC=ON -DENABLE_DRAFTS=ON && \
    cmake --build . -j4 && \
    cmake --install . 

RUN git clone https://github.com/zeromq/cppzmq.git && \
    cd cppzmq && mkdir build && cd build && \
    cmake .. -DENABLE_DRAFTS=ON && \
    cmake --build . -j4 && \
    cmake --install . 

RUN git clone https://github.com/msgpack/msgpack-c.git && \
    cd msgpack-c && git checkout cpp_master && cmake . && \
    cmake --build . --target install

COPY ./docker/stempy-mpi-conda-jammy-zmq/conda /condaenv
ARG CONDA_ENV_DIR=/condaenv
RUN mamba env update -n base -f ${CONDA_ENV_DIR}/environment.yml      && \
    conda clean -a -y -q                       

ARG PYTHON_VERSION=3.7
WORKDIR /source
COPY . /source/stempy/

RUN mkdir -p /build/stempy                                                                    && \
    cd /build/stempy                                                                          && \
    cmake -DCMAKE_BUILD_TYPE:STRING=Release \
    -Dstempy_ENABLE_VTKm:BOOL=OFF \
    -Dstempy_ENABLE_MPI:BOOL=ON \
    /source/stempy .                                                                          && \
    make -j 16                                                                                && \
    cp -r -L /build/stempy/lib/stempy \
    /opt/conda/lib/python${PYTHON_VERSION}/site-packages                                        && \
    rm -rf /source/stempy                                                                     

RUN /sbin/ldconfig